/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg;

import java.io.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.*;
import java.util.ArrayList;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.IOException;

/**
 *
 * @author brian.compter
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Our filechooser used to select the image file/directory to use
     */
    final JFileChooser fc = new JFileChooser();
    
    /**
     * File to our image
     */
    File imageFile;
    
    /**
     * The buffered image we will be working with
     */
    BufferedImage img;
    
    /**
     * The directory of the target image
     * This should also be where our feature data is kept
     */
    String directory;
    
    /**
     * List of all frames and constituent features
     */
    ArrayList <FeatureList> frames = new ArrayList();
    
    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }
    
    /**
     * A helper funtion to construct proper combined RGB value from individual
     * inputs.  This is used to help speed calls to BufferedImage.SetRGB()
     */
    private int GetRGBValue(int r, int g, int b)
    {
        return (r << 16) | (g << 8) | b;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSelect = new javax.swing.JButton();
        jTextFieldFile = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldFrameStart = new javax.swing.JTextField();
        jTextFieldFrameEnd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldFeatures = new javax.swing.JTextField();
        jButtonRun = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonSelect.setText("Select");
        jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionPerformed(evt);
            }
        });

        jLabel1.setText("Image File:");

        jLabel2.setText("Frames:");

        jTextFieldFrameStart.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldFrameStart.setText("1");

        jTextFieldFrameEnd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldFrameEnd.setText("1");

        jLabel3.setText("Features:");

        jTextFieldFeatures.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldFeatures.setText("1");

        jButtonRun.setText("RUN");
        jButtonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldFrameStart, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFrameEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 212, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldFeatures))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonRun, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSelect)
                    .addComponent(jTextFieldFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldFrameStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFrameEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldFeatures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jButtonRun)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionPerformed
        
        // Select a new image file to work with
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) 
        {
            File file = fc.getSelectedFile();
            if (file.exists())
            {
                System.out.println("Selected " + file.getAbsolutePath() + " " + file.getName());
                imageFile = file;
                jTextFieldFile.setText(file.getName());
                
                String fileName = file.getName();
                String filePath = file.getAbsolutePath();
                directory = filePath.substring(0, filePath.length()-fileName.length());
                System.out.println("Directory " + directory);
            }
        }
    }//GEN-LAST:event_jButtonSelectActionPerformed

    private void jButtonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunActionPerformed
        
        // Open image file
        try 
        {
            img = ImageIO.read(imageFile);
        } catch(Exception e)
        {
            System.out.println(e.toString());
        }
        
        // Load features
        int start, stop;
        start = Integer.parseInt(jTextFieldFrameStart.getText());
        stop = Integer.parseInt(jTextFieldFrameEnd.getText());
        for (int i = start; i <= stop; i++)
        {
            String featureFilePath = directory + "output_features_" + i + ".txt";
            try 
            {
                BufferedReader br = new BufferedReader(new FileReader(featureFilePath));
                String input;
                FeatureList fl = new FeatureList();
                while ((input = br.readLine()) != null)
                {
                    Feature f = new Feature();
                    String split [] = input.split(",");
                    int frame = Integer.parseInt(split[0]);
                    int x = Integer.parseInt(split[1]);
                    int y = Integer.parseInt(split[2]);
                    int value = Integer.parseInt(split[3]);
                    
                    f.x = x;
                    f.y = y;
                    f.value = value;
                            
                    fl.features.add(frame, f);
                }
                frames.add(fl);
            } 
            catch (Exception e)
            {
                System.out.println(e.toString());
            }
        }        
        
        // Manipulate our image with requested feature data
        String split [] = jTextFieldFeatures.getText().split(",");
        ArrayList <Integer> featureNumbers = new ArrayList();
        for (int i = 0; i < split.length; i++)
        {
            featureNumbers.add(Integer.parseInt(split[i]));
        }
        for (int i = start-1; i < stop; i++)
        {
            int delta = stop - start;
            int colorValue = 255 - delta + i;
            FeatureList fl = frames.get(i);
            for (int ii = 0; ii < featureNumbers.size(); ii++)
            {
                Feature f = fl.features.get(featureNumbers.get(ii));
                if (f.value >= 0)  // ignore lost features
                {
                    for (int xx = -1; xx < 1; xx++)
                    {
                        for (int yy = -1; yy < 1; yy++)
                        {
                            img.setRGB(f.x+xx, f.y+yy, GetRGBValue(colorValue, 0, 0));
                        }
                    }
         
                }
            }
        }
        
        // Save image to file
        File outputfile = new File("output.png");
        try {
            ImageIO.write(img, "png", outputfile);
        } catch (Exception e)
        {
            System.out.println(e.toString());
        }
        
    }//GEN-LAST:event_jButtonRunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRun;
    private javax.swing.JButton jButtonSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldFeatures;
    private javax.swing.JTextField jTextFieldFile;
    private javax.swing.JTextField jTextFieldFrameEnd;
    private javax.swing.JTextField jTextFieldFrameStart;
    // End of variables declaration//GEN-END:variables
}
